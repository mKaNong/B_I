<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:repository="http://www.springframework.org/schema/data/repository"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
http://www.springframework.org/schema/data/repository http://www.springframework.org/schema/data/repository/spring-repository.xsd
http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd
">
	<!-- <bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	 -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="cacheManager" ref="cacheManager" />
		<property name="realm" ref="sysBackRealm" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
 
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionDAO" ref="sessionDAO"></property>
		 <property name="globalSessionTimeout" value="1800000000"/><!-- 回话有效时间 -->
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
         <property name="sessionIdCookieEnabled" value="true"/>
 
	</bean>
	
	<bean id="sessionDAO" class="com.framework.qw.hf.shiro.ShiroSessionDAO"  >
	 <property name="mcc" ref="memCachedClient"></property>
	</bean>
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager" />
	
	<bean id="sysBackRealm" class="com.system.wq.hf.shiro.UserShiroRealm">		
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5" />
			</bean>
		</property>
	</bean>
	<bean id="sha256Matcher" class="org.apache.shiro.authc.credential.Sha256CredentialsMatcher"></bean>
	 
	 
	 
	  <!--shiro过滤器配置，bean的id值须与web中的filter-name的值相同-->  
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
        <property name="securityManager" ref="securityManager" />  
        <!-- 没有权限或者失败后跳转的页面 -->  
        <property name="loginUrl" value="/index.jsp" />  
        <property name="successUrl" value="/loginSuccess.jsp" />  
        <property name="unauthorizedUrl" value="" /><!-- 没有权限默认跳转的页面 -->  
        <property name="filterChainDefinitions">  
            <value>  
                /platform/loginout = logout  
                 <!-- /static/**=anon  anon表示此地址不需要任何权限即可访问 -->  
                 
                <!-- /user=perms[user:query] perms[user:query]表示访问此连接需要权限为user:query的用户 -->  
                  
                <!-- /user/add=roles[manager]  roles[manager]表示访问此连接需要用户的角色为manager -->  
               <!-- 这里的权限验证可用这种配置的，也可以写个注释标在每个方法上然后拦截器中调用Subject currentUser = SecurityUtils.getSubject(); -->
                 
            </value>  
        </property>  
    </bean>   
    
    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/platform/nologin" />
    </bean>
</beans>
